# hashtagchris' dotfile additions: You've tried the best, now try the rest
# https://github.com/hashtagchris/dotfiles/blob/main/.bashrc-additions

# gha is short for GitHub Authentication
# Use this if you have repository write but git push fails with 403 Forbidden or similar
gha() {
    install_github_cli

    if command -v gh > /dev/null
    then
        unset GITHUB_TOKEN
        gh auth login -h github.com
        token="$(gh config get -h github.com oauth_token)"
        export GITHUB_TOKEN="$token"
    else
        echo "Install the GitHub cli first, then re-attempt."
    fi
}

# installs the github cli if it's not already installed
install_github_cli() {
    if ! command -v gh
    then
        echo "Attempting to install github cli"
        # debian and ubuntu use apt-get
        if command -v apt
        then
            # Might have to register another package source
            # https://github.com/cli/cli/blob/trunk/docs/install_linux.md
            sudo apt install -y gh
        else
            # alpine uses apk
            if command -v apk
            then
                sudo apk update && sudo apk add --no-cache github-cli
            else
                echo "github cli not installed, don't know how to install it. See https://github.com/cli/cli/blob/trunk/docs/install_linux.md"
            fi
        fi
    fi
}

# Give each codespace a unique prompt: {petname} {codespace_suffix} ➜ {path} $
# https://stackoverflow.com/questions/5947742/how-to-change-the-output-color-of-echo-in-linux
# based on the standard Codespaces bash prompt theme. See https://github.com/microsoft/vscode-dev-containers/blob/6e97392e224a3bcf392f3b5b1cd171697e4b4764/script-library/common-debian.sh#L297-L325
__custom_bash_prompt() {
    local petname="\[\033[0;31m\][SET ~/.petname]"
    if [[ -f "${HOME}/.petname" ]]; then
        petname="\[\033[0;32m\]$(cat ${HOME}/.petname)"
    fi

    # the codespace name's suffix, in light gray
    local codespace_name_suffix="\[\033[0;37m\]${CODESPACE_NAME##*-}"

    local returnpart='`export XIT=$? \
        && [ "$XIT" -ne "0" ] && echo -n "\[\033[1;31m\]➜" || echo -n "\[\033[0m\]➜"`'

    local lightblue='\[\033[1;34m\]'
    local removecolor='\[\033[0m\]'
    PS1="${petname} ${codespace_name_suffix} ${returnpart} ${lightblue}\w${removecolor} \$ "
    unset -f __custom_bash_prompt
}
__custom_bash_prompt

export PATH=$PATH:$HOME/go/bin:/workspaces/github/bin

# golang setup
if command -v go > /dev/null
then
    # ensure GOBIN is set
    if [ -z $GOBIN ]
    then
        export GOBIN="$(go env GOPATH)/bin"
    fi

    # add GOBIN to path
    export PATH=$PATH:$GOBIN
fi

# path updates
if [ "github/github" == $GITHUB_REPOSITORY ]
then
    export PATH=$PATH:/workspaces/github/bin
fi

# Redirect output to avoid error response from `gh cs create --status`:
# show status: failed to poll state changes from codespace: get post create output: unmarshal output: invalid character 'C' looking for beginning of value
~/update-vscode-settings >> /tmp/dotfiles.log
